1. create new branch:
    git checkout -b osama 
    git checkout -b moftah

2. switch to existing branch:
    git checkout osama 
    git checkout moftah

3. after switching to the branch:
    git add .
    git commit -m "Your message"
    git push   ( this will go to the branch that we are currently in)




// merging all branches to main then merge main with every branch to make it up to date


0 Sanity check – be sure you start clean

git status            # make sure nothing is unstaged or uncommitted
If anything is pending, either commit it or git stash before continuing.

1 Bring main and all remote references up to date

git checkout main
git pull  origin main       # local main is now identical to GitHub main
git fetch origin            # refresh origin/osama, origin/moftah, origin/nader

2 Merge Osama’s work into main

git merge --no-ff origin/osama     # creates a merge commit
# -- resolve conflicts if Git stops for them
git commit                         # only needed when conflicts were resolved


3 Merge Moftah’s work into main (still on the main branch)

git merge --no-ff origin/moftah
# -- resolve conflicts if any
git commit                         # only if conflicts occurred

4 Merge Nader’s personal branch (if it exists)

git merge --no-ff origin/nader
# -- resolve conflicts if any
git commit
(If you work directly on main instead of a personal branch, skip step 4.)

5 Publish the fully-integrated main

git push origin main
At this moment GitHub’s main contains Osama + Moftah + Nader code together.

6 Refresh Osama’s branch so it now starts at the new main

git checkout osama              # switch to local osama branch
git pull --ff-only              # fast-forward to origin/osama (no local drift)
git merge --ff-only origin/main # bring in the brand-new main tip
#    ↑ if this refuses (“non-fast-forward”), fall back to:
#      git merge origin/main     # then resolve conflicts, git commit
git push origin osama           # publish the clean, up-to-date osama branch


7 Refresh Moftah’s branch the same way

git checkout moftah
git pull --ff-only
git merge --ff-only origin/main  # or plain `git merge origin/main` if needed
git push origin moftah

8 (Optionally) Refresh Nader’s personal branch

git checkout nader
git pull --ff-only
git merge --ff-only origin/main  # or plain merge if fast-forward is impossible
git push origin nader
9 Tell the team what to run


Osama (inside branch osama):
git pull
Moftah (inside branch moftah):
git pull
Their single git pull command fast-forwards them to the state you just pushed; they never touch merge conflicts.